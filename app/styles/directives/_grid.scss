// Contains generalized styling for any kind of grid/detail grid. Not really card specific.
grid {
  @mixin scaled-item($scale) {
    width: $card-width * $scale;
    height: $card-height * $scale;

    img {
      border-radius: 16px * $scale;
      box-shadow: 0px 1px * $scale 6px * $scale rgba(0, 0, 0, 0.3);
    }

    .background {
      border-radius: 16px * $scale;
    }
  }

  display: block; // Browsers don't (always?) assume block display on a custom tag
  user-select: none; // Selection is mighty fucked up if we leave it on, because we re-order all the cards

  .content-container {
    position: relative; // Grid items are absolutely positioned, so we need this
    margin: 0 10px;
  }

  .grid-header, .grid-item {
    position: absolute;
    top: 0;
    left: 0;
  }

  .grid-header {
    width: 100%;
  }

  .grid-item {
    @include scaled-item(1);
    cursor: pointer;
    transform-origin: 0 0;
    perspective: 2000px;
    transform-style: preserve-3d;

    img {
      position: absolute;
      z-index: 1;
      width: 100%;
      height: auto;
      transform-origin: 0 0;
    }
  }


  // ~-~-~- DOWNSCALING

  &.downscaled-1-2 .grid-item {
    @include scaled-item(1 / 2);
  }

  &.downscaled-1-3 .grid-item {
    @include scaled-item(1 / 3);
  }

  &.downscaled-1-4 .grid-item {
    @include scaled-item(1 / 3);
  }


  // ~-~-~- TRANSITIONED MODE

  &.transitioned {
    .grid-item, .grid-header, .grid-item img, .grid-item .background {
      transition: 0.2s ease-in-out transform,
                  0.2s ease-in-out opacity;
    }
  }
}
